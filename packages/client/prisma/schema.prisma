// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  Teacher       Teacher?  @relation(fields: [teacherId], references: [id])
  is_teacher    Boolean   @default(false)
  teacherId     String?
  Summary       Summary[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Teacher {
  id         String   @id @default(uuid())
  email      String   @unique
  module     Int
  chapter    Int
  section    Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  User       User[]
  token      String
}

model Summary {
  id   String @id @default(uuid())
  user User   @relation(fields: [userId], references: [id])

  userId            String
  module            Int
  chapter           Int
  section           Int
  isPassed          Boolean
  containment_score Float
  content_score     Float
  similarity_score  Float
  wording_score     Float
  text              String
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
}
